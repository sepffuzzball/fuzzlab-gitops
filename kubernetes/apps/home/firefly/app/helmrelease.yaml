apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: firefly-iii
  namespace: finance
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        pod:
          automountServiceAccountToken: false
          enableServiceLinks: false
          annotations:
            reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
             repository: ghcr.io/onedr0p/postgres-init
             tag: 16.1
            imagePullPolicy: IfNotPresent
            env:
              INIT_POSTGRES_DBNAME: &dbname firefly
              INIT_POSTGRES_HOST: &postgres postgresql.database.svc.cluster.local
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: home-secrets
                    key: "FIREFLY_POSTGRES_USER"
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: home-secrets
                    key: "FIREFLY_POSTGRES_PASSWORD"
              INIT_POSTGRES_SUPER_PASS: "${SECRET_POSTGRES_PASSWORD}"
              DB_HOST: *postgres
              DB_DATABASE: *dbname
              DB_USERNAME: 
                valueFrom:
                  secretKeyRef:
                    name: home-secrets
                    key: "FIREFLY_POSTGRES_USER"
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: home-secrets
                    key: "FIREFLY_POSTGRES_PASSWORD"

        containers:
          main:
            image:
              repository: registry.samipsolutions.fi/docker/fireflyiii/core
              tag: version-6.0.30
            env:
              TZ: ${TZ}
              APP_URL: "http://firefly.${SECRET_DOMAIN_LOCAL}"
              APP_ENV: "production"
              DB_CONNECTION: "pgsql"
              DB_HOST: *postgres
              DB_PORT: "5432"
              DB_DATABASE: firefly
              DB_USERNAME: firefly_postgres_user
              MAIL_MAILER: log
              TRUSTED_PROXIES: "**" # TODO: This should be changed..
              SEND_REGISTRATION_MAIL: false
              SEND_ERROR_MESSAGE: false
              SEND_LOGIN_NEW_IP_WARNING: false
              COOKIE_DOMAIN: "${SECRET_DOMAIN_LOCAL}"
              COOKIE_SECURE: "true"
              COOKIE_SAMESITE: "lax"
              AUTHENTICATION_GUARD: "remote_user_guard"
              AUTHENTICATION_GUARD_HEADER: "X-authentik-uid"
              AUTHENTICATION_GUARD_EMAIL: "X-authentik-email"
              # Requires version 6.0.21.
              # FIREFLY_III_LAYOUT: v2
            envFrom:
              - secretRef:
                  name: firefly-secrets
            resources:
              requests:
                cpu: 100m
                memory: 256Mi

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: "internal"
        annotations:
          hajimari.io/icon: mdi:cash
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://cash.skylab.fi/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-uid,X-authentik-email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host "firefly.${SECRET_DOMAIN_LOCAL}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        #tls:
        #  - hosts:
        #      - *host
    persistence:
      upload:
        enabled: true
        existingClaim: firefly-config
        advancedMounts:
          main:
            main:
              - path: /var/www/html/storage/upload
      logs:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            main:
              - path: /var/www/html/storage/logs