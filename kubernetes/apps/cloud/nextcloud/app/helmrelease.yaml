---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  timeout: 15m
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.6.6
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
    timeout: 30m
  upgrade:
    cleanupOnFail: true
    timeout: 30m
    remediation:
      strategy: rollback
      retries: 3

  values:
    image:
      flavor: fpm

    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
      image:
        repository: nginx
        tag: "1.25.4"
      config:
        default: true
      resources:
        requests:
          cpu: 50m
          memory: 20Mi

    nextcloud:
      #extraInitContainers:
      #  - name: init-db
      #    image: ghcr.io/haraldkoch/postgres-init:16.2@sha256:599c7b0a56cffdccab49fe5a016b0c53c25306551ddbfbeaefa7661d2a3daa68
      #    envFrom:
      #      - secretRef:
      #          name: nextcloud-secret
      datadir: /var/www/data
      existingSecret:
        enabled: true
        secretName: nextcloud-secrets
      host: &host cloud.${SECRET_DOMAIN}
      mail:
        enabled: false
        fromAddress: admin
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp.${SECRET_DOMAIN}
          port: 25
          authtype: NONE
          name: ""
          password: ""
      # configs:
      #   proxy.config.php: |-
      #     <?php
      #     $CONFIG = array (
      #       'trusted_proxies' => array(
      #         0 => '127.0.0.1',
      #         1 => '10.0.0.0/8',
      #       ),
      #       'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
      #     );
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: ${APP}-pguser-${DB_USER}
        usernameKey: user
        passwordKey: password
        hostKey: host
        databaseKey: dbname
    redis:
      enabled: true
      persistence:
        storageClass: csi-cephfs-sc
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host

    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: lcl-nextcloud

    # this seems to be required for nextcloud initialization which takes a long time
    startupProbe:
      enabled: false
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 60
      successThreshold: 1
    livenessProbe:
      enabled: false
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: false
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    resources:
      requests:
        cpu: 200m
        memory: 250M
