---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: csi-cephfs-pv-authentikdb
spec:
  storageClassName: csi-cephfs-sc
  claimRef:
    name: csi-cephfs-pvc-authentikdb
    namespace: security
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: cephfs.csi.ceph.com
    nodeStageSecretRef:
      # node stage secret name
      name: csi-cephfs-secret
      # node stage secret namespace where above secret is created
      namespace: kube-system
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "872c236b-2dc0-4856-81b2-e04499487caa"
      "fsName": "k8s-cephfs"
      "staticVolume": "true"
      #"rootPath": /volumes/csi/authentik/db
      "subvolumeName": "k8s-authentik"
      "subvolumePath": "/volumes/csi/k8s-authentik/db"
      "volumeNamePrefix": "k8s-"
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: csi-cephfs-pv-authentikdb

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: csi-cephfs-pv-authentikredis
spec:
  storageClassName: csi-cephfs-sc
  claimRef:
    name: csi-cephfs-pvc-authentikredis
    namespace: security
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: cephfs.csi.ceph.com
    nodeStageSecretRef:
      # node stage secret name
      name: csi-cephfs-secret
      # node stage secret namespace where above secret is created
      namespace: kube-system
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "872c236b-2dc0-4856-81b2-e04499487caa"
      "fsName": "k8s-cephfs"
      "staticVolume": "true"
      #"rootPath": /volumes/csi/authentik/redis
      "subvolumeName": "k8s-authentik"
      "subvolumePath": "/volumes/csi/k8s-authentik/redis"
      "volumeNamePrefix": "k8s-"
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: csi-cephfs-pv-authentikredis

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: csi-cephfs-pv-authentikmedia
spec:
  storageClassName: csi-cephfs-sc
  claimRef:
    name: csi-cephfs-pvc-authentikmedia
    namespace: security
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: cephfs.csi.ceph.com
    nodeStageSecretRef:
      # node stage secret name
      name: csi-cephfs-secret
      # node stage secret namespace where above secret is created
      namespace: kube-system
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "872c236b-2dc0-4856-81b2-e04499487caa"
      "fsName": "k8s-cephfs"
      "staticVolume": "true"
      #"rootPath": /volumes/csi/authentik/media
      "subvolumeName": "k8s-authentik"
      "subvolumePath": "/volumes/csi/k8s-authentik/media"
      "volumeNamePrefix": "k8s-"
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: csi-cephfs-pv-authentikmedia


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-cephfs-pvc-authentikdb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: csi-cephfs-sc
  #volumeName: csi-cephfs-pv-authentikdb

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-cephfs-pvc-authentikredis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: csi-cephfs-sc
  #volumeName: csi-cephfs-pv-authentikredis