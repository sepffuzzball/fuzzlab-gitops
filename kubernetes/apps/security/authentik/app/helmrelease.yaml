---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2023.10.x
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      secret.reloader.stakater.com/reload: authentik-secret

    authentik:
      log_level: info
      email:
        port: 587
        use_tls: true
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: "authentik-redis.security.svc.cluster.local"
        password: ""

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/icon: badge-account-horizontal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    envValueFrom:
      AUTHENTIK_SECRET_KEY:
        secretKeyRef:
          name: authentik-secret
          key: authentik_secret_key
      AUTHENTIK_EMAIL__HOST:
        secretKeyRef:
          name: authentik-secret
          key: authentik_email_host
      AUTHENTIK_EMAIL__USERNAME:
        secretKeyRef:
          name: authentik-secret
          key: authentik_email_username
      AUTHENTIK_EMAIL__PASSWORD:
        secretKeyRef:
          name: authentik-secret
          key: authentik_email_password
      AUTHENTIK_EMAIL__FROM:
        secretKeyRef:
          name: authentik-secret
          key: authentik_email_from
      AUTHENTIK_POSTGRESQL__HOST:
        secretKeyRef:
          name: ${APP}-pguser-${DB_USER}
          key: host
      AUTHENTIK_POSTGRESQL__NAME:
        secretKeyRef:
          name: ${APP}-pguser-${DB_USER}
          key: dbname
      AUTHENTIK_POSTGRESQL__USER:
        secretKeyRef:
          name: ${APP}-pguser-${DB_USER}
          key: user
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          name: ${APP}-pguser-${DB_USER}
          key: password
      AUTHENTIK_REDIS__PASSWORD:
        secretKeyRef:
          name: authentik-secret
          key: redisPassword
    
    volumes: 
      - name: media
        persistentVolumeClaim:
          claimName: authentik-media

    volumeMounts: 
      - mountPath: /media
        name: media

    postgresql:
      enabled: false

    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true

    redis:
      enabled: false
    