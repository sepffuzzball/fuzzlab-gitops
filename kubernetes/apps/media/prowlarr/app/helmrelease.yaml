---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: csi-driver-cephfs
      namespace: storage
  values:
    controllers:
      main:
        volumes:
        - name: tmp
          emptyDir:
            medium: Memory

        pod:
          securityContext:
            runAsUser: ${PUID}
            runAsGroup: ${PGID}
            runAsNonRoot: true
            fsGroup: ${PGID}
            fsGroupChangePolicy: OnRootMismatch

        #initContainers:
        #  01-init-db:
        #      image:
        #        repository: ghcr.io/onedr0p/postgres-init
        #        tag: 16.2@sha256:20e2e34f2bc5b761b2ca735cae2c20e662c2d47e50516db2338d1415ec7ca33c
        #      imagePullPolicy: IfNotPresent
        #      env:
        #        INIT_POSTGRES_DBNAME: prowlarr prowlarr-log
        #        INIT_POSTGRES_HOST: &postgres postgresql.database.svc.cluster.local
        #        INIT_POSTGRES_USER:
        #          valueFrom:
        #            secretKeyRef:
        #              name: cluster-media-secrets
        #              key: "PROWLARR_0_POSTGRES_USER"
        #        INIT_POSTGRES_PASS:
        #          valueFrom:
        #            secretKeyRef:
        #              name: cluster-media-secrets
        #              key: "PROWLARR_0_POSTGRES_PASSWORD"
        #        INIT_POSTGRES_SUPER_PASS: "${SECRET_POSTGRES_PASSWORD}"
        containers:
          main:
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            image:
              repository: ghcr.io/onedr0p/prowlarr
              tag: 1.27.0
            env:
              TZ: ${TIMEZONE}
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__ANALYTICS_ENABLED: "False"
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__THEME: dark
              PROWLARR__POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-pguser-${DB_USER}
                    key: host
              PROWLARR__POSTGRES_MAIN_DB: "${DB_NAME}"
              PROWLARR__POSTGRES_LOG_DB: "${DB_NAME}-log"
              PROWLARR__POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-pguser-${DB_USER}
                    key: password
              PROWLARR__POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-pguser-${DB_USER}
                    key: user
              PROWLARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: cluster-media-secrets
                    key: "PROWLARR_0_API_KEY"
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          #external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/icon: card-search
        hosts:
          - host: &host "prowlarr.${SECRET_DOMAIN_LOCAL}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        #tls:
        #  - hosts:
        #      - *host

    persistence:
      config:
        enabled: true
        existingClaim: prowlarr-config
      lcl:
        enabled: true
        existingClaim: lcl
      downloads:
        enabled: true
        existingClaim: lcl-downloads
        mountPath: /downloads
      #media:
      #  enabled: false
      #  existingClaim:
      #  mountPath:
